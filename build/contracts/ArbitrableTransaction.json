{
  "contractName": "ArbitrableTransaction",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appeal",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "arbitratorExtraData",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyA",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "timeOutByPartyA",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "status",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyB",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "rule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyAFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyBFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "arbitrator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timeout",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "timeOutByPartyB",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastInteraction",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "payArbitrationFeeByPartyA",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputeID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "payArbitrationFeeByPartyB",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "submitEvidence",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "name": "_timeout",
          "type": "uint256"
        },
        {
          "name": "_partyB",
          "type": "address"
        },
        {
          "name": "_arbitratorExtraData",
          "type": "bytes"
        },
        {
          "name": "_metaEvidence",
          "type": "string"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_party",
          "type": "uint8"
        }
      ],
      "name": "HasToPayFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_rulingOptions",
          "type": "string"
        }
      ],
      "name": "Dispute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "Ruling",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_metaEvidenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "MetaEvidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_metaEvidenceID",
          "type": "uint256"
        }
      ],
      "name": "LinkMetaEvidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_party",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "Evidence",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amountReimbursed",
          "type": "uint256"
        }
      ],
      "name": "reimburse",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526040516200121a3803806200121a8339810160409081528151602080840151928401516060850151608086015160008054600160a060020a031916600160a060020a0387161790559086018051949692949093919092019186918691869186918691869184916200007b9160019184019062000161565b50505060028490556003805433600160a060020a03199182161790915560048054909116600160a060020a03851617905560408051602080825283518183015283516000937f61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d938693909283928301918501908083838a5b838110156200010d578181015183820152602001620000f3565b50505050905090810190601f1680156200013b5780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050600a80543401905550620002069650505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001a457805160ff1916838001178555620001d4565b82800160010185558215620001d4579182015b82811115620001d4578251825591602001919060010190620001b7565b50620001e2929150620001e6565b5090565b6200020391905b80821115620001e25760008155600101620001ed565b90565b61100480620002166000396000f3006080604052600436106101115763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663069fae2a81146101165780630c7ac7b61461016457806310e1d8ca146101ee57806319e2641e1461021f5780631b9265b814610234578063200d2ed2146102495780632904011314610282578063311a6c56146102975780634a44c2e4146102b25780634b40c974146102ca578063512491f1146102f15780636cc6cde11461030657806370dea79a1461031b578063853c80ce146103305780638f71a26514610345578063a01096311461035a578063aa8c217c14610362578063b0a1e2b414610377578063b1bcce3a1461038c578063bac91e2e14610394575b600080fd5b6040805160206004803580820135601f81018490048402850184019095528484526101629436949293602493928401919081908401838280828437509497506103ed9650505050505050565b005b34801561017057600080fd5b5061017961050b565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b357818101518382015260200161019b565b50505050905090810190601f1680156101e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101fa57600080fd5b50610203610598565b60408051600160a060020a039092168252519081900360200190f35b34801561022b57600080fd5b506101626105a7565b34801561024057600080fd5b506101626105fe565b34801561025557600080fd5b5061025e610659565b6040518082600481111561026e57fe5b60ff16815260200191505060405180910390f35b34801561028e57600080fd5b50610203610662565b3480156102a357600080fd5b50610162600435602435610671565b3480156102be57600080fd5b506101626004356106cd565b3480156102d657600080fd5b506102df61073a565b60408051918252519081900360200190f35b3480156102fd57600080fd5b506102df610740565b34801561031257600080fd5b50610203610746565b34801561032757600080fd5b506102df610755565b34801561033c57600080fd5b5061016261075b565b34801561035157600080fd5b506102df6107b0565b6101626107b6565b34801561036e57600080fd5b506102df610977565b34801561038357600080fd5b506102df61097d565b610162610983565b3480156103a057600080fd5b506040805160206004803580820135601f8101849004840285018401909552848452610162943694929360249392840191908190840183828082843750949750610b249650505050505050565b600354600160a060020a03163314806104105750600454600160a060020a031633145b151561041b57600080fd5b60008054600854604080517f49912f880000000000000000000000000000000000000000000000000000000081526004810183815260248201928352865160448301528651600160a060020a03909516956349912f88953495948994909260649091019160208601918190849084905b838110156104a357818101518382015260200161048b565b50505050905090810190601f1680156104d05780820380516001836020036101000a031916815260200191505b5093505050506000604051808303818588803b1580156104ef57600080fd5b505af1158015610503573d6000803e3d6000fd5b505050505050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105905780601f1061056557610100808354040283529160200191610590565b820191906000526020600020905b81548152906001019060200180831161057357829003601f168201915b505050505081565b600354600160a060020a031681565b600354600160a060020a031633146105be57600080fd5b600260095460ff1660048111156105d157fe5b146105db57600080fd5b600254600754014210156105ee57600080fd5b6008546105fc906001610c47565b565b600354600160a060020a0316331461061557600080fd5b600454600a54604051600160a060020a039092169181156108fc0291906000818181858888f19350505050158015610651573d6000803e3d6000fd5b506000600a55565b60095460ff1681565b600454600160a060020a031681565b600054600160a060020a0316331461068857600080fd5b604080518281529051839133917f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e756222769181900360200190a36106c98282610c47565b5050565b600454600160a060020a031633146106e457600080fd5b600a548111156106f357600080fd5b600354604051600160a060020a039091169082156108fc029083906000818181858888f1935050505015801561072d573d6000803e3d6000fd5b50600a8054919091039055565b60055481565b60065481565b600054600160a060020a031681565b60025481565b600454600160a060020a0316331461077257600080fd5b600160095460ff16600481111561078557fe5b1461078f57600080fd5b600254600754014210156107a257600080fd5b6008546105fc906002610c47565b60075481565b600354600090600160a060020a031633146107d057600080fd5b6000546040517ff7434ea90000000000000000000000000000000000000000000000000000000081526020600482019081526001805460026000198284161561010002019091160460248401819052600160a060020a039094169363f7434ea99391929182916044909101908490801561088b5780601f106108605761010080835404028352916020019161088b565b820191906000526020600020905b81548152906001019060200180831161086e57829003601f168201915b505092505050602060405180830381600087803b1580156108ab57600080fd5b505af11580156108bf573d6000803e3d6000fd5b505050506040513d60208110156108d557600080fd5b5051600580543401908190559091508111156108f057600080fd5b600360095460ff16600481111561090357fe5b1061090d57600080fd5b4260075560065481111561096b576009805460ff191660021790556040517fba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e5689060019080825b60ff16815260200191505060405180910390a1610974565b61097481610cc9565b50565b600a5481565b60085481565b600454600090600160a060020a0316331461099d57600080fd5b6000546040517ff7434ea90000000000000000000000000000000000000000000000000000000081526020600482019081526001805460026000198284161561010002019091160460248401819052600160a060020a039094169363f7434ea993919291829160449091019084908015610a585780601f10610a2d57610100808354040283529160200191610a58565b820191906000526020600020905b815481529060010190602001808311610a3b57829003601f168201915b505092505050602060405180830381600087803b158015610a7857600080fd5b505af1158015610a8c573d6000803e3d6000fd5b505050506040513d6020811015610aa257600080fd5b505160068054340190819055909150811115610abd57600080fd5b600360095460ff166004811115610ad057fe5b10610ada57600080fd5b4260075560055481111561096b576009805460ff191660011790556040517fba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568906000908082610953565b600354600160a060020a0316331480610b475750600454600160a060020a031633145b1515610b5257600080fd5b600360095460ff166004811115610b6557fe5b1015610b7057600080fd5b6008546000809054906101000a9004600160a060020a0316600160a060020a03167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c33846040518083600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610c09578181015183820152602001610bf1565b50505050905090810190601f168015610c365780820380516001836020036101000a031916815260200191505b50935050505060405180910390a350565b610c518282610f10565b6001811415610c8b57600354600a54604051600160a060020a039092169181156108fc0291906000818181858888f1935050505050610cc0565b6002811415610cc057600454600a54604051600160a060020a039092169181156108fc0291906000818181858888f150505050505b50506000600a55565b6009805460ff19166003179055600054604080517fc13517e100000000000000000000000000000000000000000000000000000000815260026004820181815260248301938452600180546101008183161502600019011683900460448501819052600160a060020a039096169563c13517e1958895929392909160649091019084908015610d995780601f10610d6e57610100808354040283529160200191610d99565b820191906000526020600020905b815481529060010190602001808311610d7c57829003601f168201915b505093505050506020604051808303818588803b158015610db957600080fd5b505af1158015610dcd573d6000803e3d6000fd5b50505050506040513d6020811015610de457600080fd5b5051600881905560008054604080518082018252601981527f506172747920412077696e733b506172747920422077696e7300000000000000602082810191825283518181528351918101919091528251600160a060020a03909516957f775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a126119593949193849392840192918190849084905b83811015610e8d578181015183820152602001610e75565b50505050905090810190601f168015610eba5780820380516001836020036101000a031916815260200191505b509250505060405180910390a3600854600080546040805192835251600160a060020a03909116917f21da1f02e8071a7680b73ad6e5bc1aee1f8f0620a0a08a0333be1f0ca9dd7fec919081900360200190a350565b6008548214610f1e57600080fd5b6002811115610f2c57600080fd5b6001811415610f7c57600354600654600554600160a060020a03909216916108fc9110610f5b57600654610f5f565b6005545b6040518115909202916000818181858888f1935050505050610fc7565b6002811415610fc757600454600654600554600160a060020a03909216916108fc9110610fab57600654610faf565b6005545b6040518115909202916000818181858888f150505050505b50506009805460ff191660041790555600a165627a7a72305820193bb7eb27f70c147199f9c8fd542e7dd99477619cc2aedb1c778bd0421d48160029",
  "deployedBytecode": "",
  "sourceMap": "489:2033:4:-;;;1088:252;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3688:10:3;:24;;-1:-1:-1;;;;;;3688:24:3;-1:-1:-1;;;;;3688:24:3;;;;;1088:252:4;;;3722:42:3;;1088:252:4;;;;;;;;;;;;;;;;;;;;;;;;;3722:42:3;;-1:-1:-1;;3722:42:3;;;;:::i;:::-;-1:-1:-1;;;2481:7:6;:16;;;2507:6;:17;;2514:10;-1:-1:-1;;;;;;2507:17:6;;;;;;;2534:6;:14;;;;;-1:-1:-1;;;;;2534:14:6;;;;;2563:30;;;;;;;;;;;;;;;-1:-1:-1;;2563:30:6;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2563:30:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1316:6:4;:17;;1324:9;1316:17;;;-1:-1:-1;489:2033:4;;-1:-1:-1;;;;;;;489:2033:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;489:2033:4;;;-1:-1:-1;489:2033:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "489:2033:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6216:132:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6216:132:6;;-1:-1:-1;6216:132:6;;-1:-1:-1;;;;;;;6216:132:6;;;691:32:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;691:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;691:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;845:21:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;845:21:6;;;;;;;;-1:-1:-1;;;;;845:21:6;;;;;;;;;;;;;;5191:194;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5191:194:6;;;;1449:91:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1449:91:4;;;;1212:20:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1212:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;872:21:6;;;;4172:182:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4172:182:3;;;;;;;1708:191:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1708:191:4;;;;;899:21:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;899:21:6;;;;;;;;;;;;;;;;;;;;960;;8:9:-1;5:2;;;30:1;27;20:12;5:2;960:21:6;;;;657:28:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;657:28:3;;;;726:19:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;726:19:6;;;;5455:194;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5455:194:6;;;;1021:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1021:27:6;;;;2951:774;;;;617:18:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;617:18:4;;;;1101:21:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1101:21:6;;;;3903:774;;;;5777:180;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5777:180:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5777:180:6;;-1:-1:-1;5777:180:6;;-1:-1:-1;;;;;;;5777:180:6;6216:132;1660:6;;-1:-1:-1;;;;;1660:6:6;1648:10;:18;;:40;;-1:-1:-1;1682:6:6;;-1:-1:-1;;;;;1682:6:6;1670:10;:18;1648:40;1640:49;;;;;;;;6285:10;;;6320:9;;6285:56;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6285:10:6;;;;:17;;6309:9;;6320;6285:56;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6285:56:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6285:56:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6285:56:6;;;;;6216:132;:::o;691:32:3:-;;;;;;;;;;;;;;;-1:-1:-1;;691:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;845:21:6:-;;;-1:-1:-1;;;;;845:21:6;;:::o;5191:194::-;1543:6;;-1:-1:-1;;;;;1543:6:6;1531:10;:18;1523:27;;;;;;5262:20;5254:6;;;;:28;;;;;;;;;5246:37;;;;;;5322:7;;5306:15;;:23;5301:3;:28;;5293:37;;;;;;5355:9;;5341:37;;1311:1;5341:13;:37::i;:::-;5191:194::o;1449:91:4:-;1543:6:6;;-1:-1:-1;;;;;1543:6:6;1531:10;:18;1523:27;;;;;;1492:6:4;;1508;;1492:23;;-1:-1:-1;;;;;1492:6:4;;;;:23;;;;;1508:6;1492;:23;:6;:23;1508:6;1492;:23;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1532:1:4;1525:6;:8;1449:91::o;1212:20:6:-;;;;;;:::o;872:21::-;;;-1:-1:-1;;;;;872:21:6;;:::o;4172:182:3:-;849:10;;-1:-1:-1;;;;;849:10:3;829;:31;821:40;;;;;;4254:49;;;;;;;;4284:10;;4272;;4254:49;;;;;;;;;4314:33;4328:10;4339:7;4314:13;:33::i;:::-;4172:182;;:::o;1708:191:4:-;1602:6:6;;-1:-1:-1;;;;;1602:6:6;1590:10;:18;1582:27;;;;;;1806:6:4;;1787:25;;;1779:34;;;;;;1823:6;;:34;;-1:-1:-1;;;;;1823:6:4;;;;:34;;;;;;;:6;:34;:6;:34;;:6;:34;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1867:6:4;:25;;;;;;;;1708:191::o;899:21:6:-;;;;:::o;960:::-;;;;:::o;657:28:3:-;;;-1:-1:-1;;;;;657:28:3;;:::o;726:19:6:-;;;;:::o;5455:194::-;1602:6;;-1:-1:-1;;;;;1602:6:6;1590:10;:18;1582:27;;;;;;5526:20;5518:6;;;;:28;;;;;;;;;5510:37;;;;;;5586:7;;5570:15;;:23;5565:3;:28;;5557:37;;;;;;5619:9;;5605:37;;1348:1;5605:13;:37::i;1021:27::-;;;;:::o;2951:774::-;1543:6;;3024:20;;-1:-1:-1;;;;;1543:6:6;1531:10;:18;1523:27;;;;;;3045:10;;:47;;;;;;;;;;;;:10;:47;;;:10;:47;;;;;-1:-1:-1;;3045:47:6;;;;;;;;;;;-1:-1:-1;;;;;3045:10:6;;;;:26;;:10;;:47;;;;;;;;:10;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3045:47:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3045:47:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3045:47:6;3102:9;:20;;3113:9;3102:20;;;;;3045:47;;-1:-1:-1;3140:28:6;-1:-1:-1;3140:28:6;3132:37;;;;;;3255:21;3248:6;;;;:28;;;;;;;;;3240:37;;;;;;3353:3;3337:15;:19;3370:9;;:27;-1:-1:-1;3366:353:6;;;3518:6;:27;;-1:-1:-1;;3518:27:6;3525:20;3518:27;;;3564:25;;;;3518:27;;3564:25;3518:27;3564:25;;;;;;;;;;;;;;;;;3366:353;;;3679:29;3692:15;3679:12;:29::i;:::-;2951:774;:::o;617:18:4:-;;;;:::o;1101:21:6:-;;;;:::o;3903:774::-;1602:6;;3976:20;;-1:-1:-1;;;;;1602:6:6;1590:10;:18;1582:27;;;;;;3997:10;;:47;;;;;;;;;;;;:10;:47;;;:10;:47;;;;;-1:-1:-1;;3997:47:6;;;;;;;;;;;-1:-1:-1;;;;;3997:10:6;;;;:26;;:10;;:47;;;;;;;;:10;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3997:47:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3997:47:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3997:47:6;4054:9;:20;;4065:9;4054:20;;;;;3997:47;;-1:-1:-1;4092:28:6;-1:-1:-1;4092:28:6;4084:37;;;;;;4207:21;4200:6;;;;:28;;;;;;;;;4192:37;;;;;;4305:3;4289:15;:19;4322:9;;:27;-1:-1:-1;4318:353:6;;;4470:6;:27;;-1:-1:-1;;4470:27:6;4477:20;4470:27;;;4516:25;;;;-1:-1:-1;;4516:25:6;-1:-1:-1;4516:25:6;;5777:180;1660:6;;-1:-1:-1;;;;;1660:6:6;1648:10;:18;;:40;;-1:-1:-1;1682:6:6;;-1:-1:-1;;;;;1682:6:6;1670:10;:18;1648:40;1640:49;;;;;;;;5862:21;5854:6;;;;:29;;;;;;;;;;5846:38;;;;;;5919:9;;5908:10;;;5899:51;;;5929:10;5899:51;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5908:10:6;;;;5899:51;;5929:10;;5940:9;;5899:51;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5899:51:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5777:180;:::o;2238:279:4:-;2311:39;2331:10;2342:7;2311:19;:39::i;:::-;1311:1:6;2364:21:4;;2360:131;;;2399:6;;2411;;2399:19;;-1:-1:-1;;;;;2399:6:4;;;;:19;;;;;2411:6;2399;:19;:6;:19;2411:6;2399;:19;;;;;;;;2360:131;;;1348:1:6;2437:21:4;;2433:58;;;2472:6;;2484;;2472:19;;-1:-1:-1;;;;;2472:6:4;;;;:19;;;;;2484:6;2472;:19;:6;:19;2484:6;2472;:19;;-1:-1:-1;;;;;2433:58:4;-1:-1:-1;;2509:1:4;2502:6;:8;2238:279::o;4795:320:6:-;4859:6;:28;;-1:-1:-1;;4859:28:6;4866:21;4859:28;;;-1:-1:-1;4907:10:6;:87;;;;;;1274:1;4907:87;;;;;;;;;;;;-1:-1:-1;4907:87:6;;:10;:87;;;;;-1:-1:-1;;4907:87:6;;;;;;;;;;;-1:-1:-1;;;;;4907:10:6;;;;:24;;4938:16;;-1:-1:-1;;4907:87:6;;;;;;;;-1:-1:-1;;4907:87:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4907:87:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4907:87:6;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4907:87:6;4897:9;:97;;;5017:10;;;5038:14;;;;;;;;;;;;4907:87;5038:14;;;;;;5009:44;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5017:10:6;;;;5009:44;;5038:14;;5009:44;;;;;;;;5038:14;5009:44;;;;5038:14;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5009:44:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5096:9;;5085:10;;;5068:40;;;;;;;-1:-1:-1;;;;;5085:10:6;;;;5068:40;;;;;;;;;;4795:320;:::o;6687:652::-;6780:9;;6768:21;;6760:30;;;;;;1274:1;6808:26;;;6800:35;;;;;;1311:1;6973:21;;6969:331;;;7008:6;;7032:9;;7020;;-1:-1:-1;;;;;7008:6:6;;;;:58;;-1:-1:-1;7020:45:6;;7056:9;;7020:45;;;7044:9;;7020:45;7008:58;;;;;;;;;;;;;;;;;;;;;;6969:331;;;1348:1;7207:21;;7203:97;;;7242:6;;7266:9;;7254;;-1:-1:-1;;;;;7242:6:6;;;;:58;;-1:-1:-1;7254:45:6;;7290:9;;7254:45;;;7278:9;;7254:45;7242:58;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7203:97:6;-1:-1:-1;;7310:6:6;:22;;-1:-1:-1;;7310:22:6;7317:15;7310:22;;;6687:652::o",
  "source": "/**\n *  @title Arbitrable Transaction\n *  @author Clément Lesaege - <clement@lesaege.com>\n *  Bug Bounties: This code hasn't undertaken a bug bounty program yet.\n */\n\n\npragma solidity ^0.4.15;\nimport \"./TwoPartyArbitrable.sol\";\n\n/** @title Arbitrable Transaction\n *  This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\n *  This can be used for buying goods, services and for paying freelancers.\n *  Party A is the payer. Party B is the payee.\n */\n contract ArbitrableTransaction is TwoPartyArbitrable {\n    string constant RULING_OPTIONS = \"Reimburse partyA;Pay partyB\";\n\n    uint public amount; // Amount sent by party A.\n\n\n    /** @dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\n     *  @param _arbitrator The arbitrator of the contract.\n     *  @param _timeout Time after which a party automatically loose a dispute.\n     *  @param _partyB The recipient of the transaction.\n     *  @param _arbitratorExtraData Extra data for the arbitrator.\n     *  @param _metaEvidence Link to meta-evidence JSON.\n     */\n    constructor(Arbitrator _arbitrator, uint _timeout, address _partyB, bytes _arbitratorExtraData, string _metaEvidence) TwoPartyArbitrable(_arbitrator,_timeout,_partyB,_arbitratorExtraData, _metaEvidence) payable public {\n        amount+=msg.value;\n    }\n\n    /** @dev Pay the party B. To be called when the good is delivered or the service rendered.\n     */\n    function pay() public onlyPartyA {\n        partyB.transfer(amount);\n        amount=0;\n    }\n\n    /** @dev Reimburse party A. To be called if the good or service can't be fully provided.\n     *  @param _amountReimbursed Amount to reimburse in wei.\n     */\n    function reimburse(uint _amountReimbursed) public onlyPartyB {\n        require(_amountReimbursed<=amount);\n        partyA.transfer(_amountReimbursed);\n        amount-=_amountReimbursed;\n    }\n\n    /** @dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\n     *  This need to be extended by contract inheriting from it.\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\n     *  @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.\n     */\n    function executeRuling(uint _disputeID, uint _ruling) internal {\n        super.executeRuling(_disputeID,_ruling);\n        if (_ruling==PARTY_A_WINS)\n            partyA.send(amount);\n        else if (_ruling==PARTY_B_WINS)\n            partyB.send(amount);\n\n        amount=0;\n    }\n\n\n }\n",
  "sourcePath": "kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
  "ast": {
    "absolutePath": "kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
    "exportedSymbols": {
      "ArbitrableTransaction": [
        781
      ]
    },
    "id": 782,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 667,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "169:24:4"
      },
      {
        "absolutePath": "kleros-interaction/contracts/standard/arbitration/TwoPartyArbitrable.sol",
        "file": "./TwoPartyArbitrable.sol",
        "id": 668,
        "nodeType": "ImportDirective",
        "scope": 782,
        "sourceUnit": 1317,
        "src": "194:34:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 669,
              "name": "TwoPartyArbitrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1316,
              "src": "523:18:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TwoPartyArbitrable_$1316",
                "typeString": "contract TwoPartyArbitrable"
              }
            },
            "id": 670,
            "nodeType": "InheritanceSpecifier",
            "src": "523:18:4"
          }
        ],
        "contractDependencies": [
          665,
          1316
        ],
        "contractKind": "contract",
        "documentation": "@title Arbitrable Transaction\n This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\n This can be used for buying goods, services and for paying freelancers.\n Party A is the payer. Party B is the payee.",
        "fullyImplemented": true,
        "id": 781,
        "linearizedBaseContracts": [
          781,
          1316,
          665
        ],
        "name": "ArbitrableTransaction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 673,
            "name": "RULING_OPTIONS",
            "nodeType": "VariableDeclaration",
            "scope": 781,
            "src": "548:62:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 671,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "548:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5265696d6275727365207061727479413b50617920706172747942",
              "id": 672,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "581:29:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dfa08ec6588a3d8f89e09209c6c214f977ae24abc50ffbe2557bea9c98769f80",
                "typeString": "literal_string \"Reimburse partyA;Pay partyB\""
              },
              "value": "Reimburse partyA;Pay partyB"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 675,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 781,
            "src": "617:18:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 674,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "617:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 700,
              "nodeType": "Block",
              "src": "1306:34:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 695,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "1316:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 696,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1477,
                        "src": "1324:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1324:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1316:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 699,
                  "nodeType": "ExpressionStatement",
                  "src": "1316:17:4"
                }
              ]
            },
            "documentation": "@dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\n @param _arbitrator The arbitrator of the contract.\n @param _timeout Time after which a party automatically loose a dispute.\n @param _partyB The recipient of the transaction.\n @param _arbitratorExtraData Extra data for the arbitrator.\n @param _metaEvidence Link to meta-evidence JSON.",
            "id": 701,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 688,
                    "name": "_arbitrator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 677,
                    "src": "1225:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$901",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 689,
                    "name": "_timeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 679,
                    "src": "1237:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 690,
                    "name": "_partyB",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 681,
                    "src": "1246:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 691,
                    "name": "_arbitratorExtraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 683,
                    "src": "1254:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 692,
                    "name": "_metaEvidence",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 685,
                    "src": "1276:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 693,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 687,
                  "name": "TwoPartyArbitrable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1316,
                  "src": "1206:18:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TwoPartyArbitrable_$1316_$",
                    "typeString": "type(contract TwoPartyArbitrable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1206:84:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "1100:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$901",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 676,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 901,
                    "src": "1100:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$901",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "name": "_timeout",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "1124:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 681,
                  "name": "_partyB",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "1139:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1139:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 683,
                  "name": "_arbitratorExtraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "1156:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 685,
                  "name": "_metaEvidence",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "1184:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1099:106:4"
            },
            "payable": true,
            "returnParameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:0:4"
            },
            "scope": 781,
            "src": "1088:252:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 716,
              "nodeType": "Block",
              "src": "1482:58:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 709,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "1508:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 706,
                        "name": "partyB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 912,
                        "src": "1492:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1492:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1492:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "1492:23:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 712,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "1525:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1532:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1525:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 715,
                  "nodeType": "ExpressionStatement",
                  "src": "1525:8:4"
                }
              ]
            },
            "documentation": "@dev Pay the party B. To be called when the good is delivered or the service rendered.",
            "id": 717,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 704,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 703,
                  "name": "onlyPartyA",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 951,
                  "src": "1471:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1471:10:4"
              }
            ],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1461:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1482:0:4"
            },
            "scope": 781,
            "src": "1449:91:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 740,
              "nodeType": "Block",
              "src": "1769:130:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 725,
                          "name": "_amountReimbursed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 719,
                          "src": "1787:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 726,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "1806:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1787:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 724,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1480,
                        1481
                      ],
                      "referencedDeclaration": 1480,
                      "src": "1779:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1779:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "1779:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 733,
                        "name": "_amountReimbursed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "1839:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 730,
                        "name": "partyA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "1823:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1823:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1823:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 736,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "1867:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 737,
                      "name": "_amountReimbursed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 719,
                      "src": "1875:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1867:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:25:4"
                }
              ]
            },
            "documentation": "@dev Reimburse party A. To be called if the good or service can't be fully provided.\n @param _amountReimbursed Amount to reimburse in wei.",
            "id": 741,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 722,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 721,
                  "name": "onlyPartyB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 962,
                  "src": "1758:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1758:10:4"
              }
            ],
            "name": "reimburse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 719,
                  "name": "_amountReimbursed",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "1727:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1726:24:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1769:0:4"
            },
            "scope": 781,
            "src": "1708:191:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "2301:216:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "2331:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 752,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "2342:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 748,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1505,
                        "src": "2311:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ArbitrableTransaction_$781",
                          "typeString": "contract super ArbitrableTransaction"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeRuling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1315,
                      "src": "2311:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2311:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "2311:39:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 755,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 745,
                      "src": "2364:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 756,
                      "name": "PARTY_A_WINS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "2373:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2364:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 764,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "2437:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 765,
                        "name": "PARTY_B_WINS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "2446:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2437:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 773,
                    "nodeType": "IfStatement",
                    "src": "2433:58:4",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 675,
                            "src": "2484:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 767,
                            "name": "partyB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 912,
                            "src": "2472:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2472:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2472:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 772,
                      "nodeType": "ExpressionStatement",
                      "src": "2472:19:4"
                    }
                  },
                  "id": 774,
                  "nodeType": "IfStatement",
                  "src": "2360:131:4",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 761,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "2411:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 758,
                          "name": "partyA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "2399:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "send",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2399:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) returns (bool)"
                        }
                      },
                      "id": 762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2399:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 763,
                    "nodeType": "ExpressionStatement",
                    "src": "2399:19:4"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 775,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "2502:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2509:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2502:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "2502:8:4"
                }
              ]
            },
            "documentation": "@dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\n This need to be extended by contract inheriting from it.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.",
            "id": 780,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 743,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "2261:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "2278:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2278:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2260:31:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2301:0:4"
            },
            "scope": 781,
            "src": "2238:279:4",
            "stateMutability": "nonpayable",
            "superFunction": 1315,
            "visibility": "internal"
          }
        ],
        "scope": 782,
        "src": "489:2033:4"
      }
    ],
    "src": "169:2354:4"
  },
  "legacyAST": {
    "absolutePath": "kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
    "exportedSymbols": {
      "ArbitrableTransaction": [
        781
      ]
    },
    "id": 782,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 667,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "169:24:4"
      },
      {
        "absolutePath": "kleros-interaction/contracts/standard/arbitration/TwoPartyArbitrable.sol",
        "file": "./TwoPartyArbitrable.sol",
        "id": 668,
        "nodeType": "ImportDirective",
        "scope": 782,
        "sourceUnit": 1317,
        "src": "194:34:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 669,
              "name": "TwoPartyArbitrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1316,
              "src": "523:18:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TwoPartyArbitrable_$1316",
                "typeString": "contract TwoPartyArbitrable"
              }
            },
            "id": 670,
            "nodeType": "InheritanceSpecifier",
            "src": "523:18:4"
          }
        ],
        "contractDependencies": [
          665,
          1316
        ],
        "contractKind": "contract",
        "documentation": "@title Arbitrable Transaction\n This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\n This can be used for buying goods, services and for paying freelancers.\n Party A is the payer. Party B is the payee.",
        "fullyImplemented": true,
        "id": 781,
        "linearizedBaseContracts": [
          781,
          1316,
          665
        ],
        "name": "ArbitrableTransaction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 673,
            "name": "RULING_OPTIONS",
            "nodeType": "VariableDeclaration",
            "scope": 781,
            "src": "548:62:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 671,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "548:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5265696d6275727365207061727479413b50617920706172747942",
              "id": 672,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "581:29:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dfa08ec6588a3d8f89e09209c6c214f977ae24abc50ffbe2557bea9c98769f80",
                "typeString": "literal_string \"Reimburse partyA;Pay partyB\""
              },
              "value": "Reimburse partyA;Pay partyB"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 675,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 781,
            "src": "617:18:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 674,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "617:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 700,
              "nodeType": "Block",
              "src": "1306:34:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 695,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "1316:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 696,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1477,
                        "src": "1324:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1324:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1316:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 699,
                  "nodeType": "ExpressionStatement",
                  "src": "1316:17:4"
                }
              ]
            },
            "documentation": "@dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\n @param _arbitrator The arbitrator of the contract.\n @param _timeout Time after which a party automatically loose a dispute.\n @param _partyB The recipient of the transaction.\n @param _arbitratorExtraData Extra data for the arbitrator.\n @param _metaEvidence Link to meta-evidence JSON.",
            "id": 701,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 688,
                    "name": "_arbitrator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 677,
                    "src": "1225:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$901",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 689,
                    "name": "_timeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 679,
                    "src": "1237:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 690,
                    "name": "_partyB",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 681,
                    "src": "1246:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 691,
                    "name": "_arbitratorExtraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 683,
                    "src": "1254:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 692,
                    "name": "_metaEvidence",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 685,
                    "src": "1276:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 693,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 687,
                  "name": "TwoPartyArbitrable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1316,
                  "src": "1206:18:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TwoPartyArbitrable_$1316_$",
                    "typeString": "type(contract TwoPartyArbitrable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1206:84:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "1100:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$901",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 676,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 901,
                    "src": "1100:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$901",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "name": "_timeout",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "1124:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 681,
                  "name": "_partyB",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "1139:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1139:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 683,
                  "name": "_arbitratorExtraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "1156:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 685,
                  "name": "_metaEvidence",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "1184:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1099:106:4"
            },
            "payable": true,
            "returnParameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:0:4"
            },
            "scope": 781,
            "src": "1088:252:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 716,
              "nodeType": "Block",
              "src": "1482:58:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 709,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "1508:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 706,
                        "name": "partyB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 912,
                        "src": "1492:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1492:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1492:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "1492:23:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 712,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "1525:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1532:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1525:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 715,
                  "nodeType": "ExpressionStatement",
                  "src": "1525:8:4"
                }
              ]
            },
            "documentation": "@dev Pay the party B. To be called when the good is delivered or the service rendered.",
            "id": 717,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 704,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 703,
                  "name": "onlyPartyA",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 951,
                  "src": "1471:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1471:10:4"
              }
            ],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1461:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1482:0:4"
            },
            "scope": 781,
            "src": "1449:91:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 740,
              "nodeType": "Block",
              "src": "1769:130:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 725,
                          "name": "_amountReimbursed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 719,
                          "src": "1787:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 726,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "1806:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1787:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 724,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1480,
                        1481
                      ],
                      "referencedDeclaration": 1480,
                      "src": "1779:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1779:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "1779:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 733,
                        "name": "_amountReimbursed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "1839:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 730,
                        "name": "partyA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "1823:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1823:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1823:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 736,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "1867:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 737,
                      "name": "_amountReimbursed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 719,
                      "src": "1875:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1867:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:25:4"
                }
              ]
            },
            "documentation": "@dev Reimburse party A. To be called if the good or service can't be fully provided.\n @param _amountReimbursed Amount to reimburse in wei.",
            "id": 741,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 722,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 721,
                  "name": "onlyPartyB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 962,
                  "src": "1758:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1758:10:4"
              }
            ],
            "name": "reimburse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 719,
                  "name": "_amountReimbursed",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "1727:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1726:24:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1769:0:4"
            },
            "scope": 781,
            "src": "1708:191:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "2301:216:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "2331:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 752,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "2342:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 748,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1505,
                        "src": "2311:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ArbitrableTransaction_$781",
                          "typeString": "contract super ArbitrableTransaction"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeRuling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1315,
                      "src": "2311:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2311:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "2311:39:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 755,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 745,
                      "src": "2364:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 756,
                      "name": "PARTY_A_WINS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "2373:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2364:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 764,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "2437:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 765,
                        "name": "PARTY_B_WINS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "2446:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2437:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 773,
                    "nodeType": "IfStatement",
                    "src": "2433:58:4",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 675,
                            "src": "2484:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 767,
                            "name": "partyB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 912,
                            "src": "2472:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2472:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2472:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 772,
                      "nodeType": "ExpressionStatement",
                      "src": "2472:19:4"
                    }
                  },
                  "id": 774,
                  "nodeType": "IfStatement",
                  "src": "2360:131:4",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 761,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "2411:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 758,
                          "name": "partyA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "2399:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "send",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2399:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) returns (bool)"
                        }
                      },
                      "id": 762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2399:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 763,
                    "nodeType": "ExpressionStatement",
                    "src": "2399:19:4"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 775,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "2502:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2509:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2502:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "2502:8:4"
                }
              ]
            },
            "documentation": "@dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\n This need to be extended by contract inheriting from it.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.",
            "id": 780,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 743,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "2261:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "2278:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2278:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2260:31:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2301:0:4"
            },
            "scope": 781,
            "src": "2238:279:4",
            "stateMutability": "nonpayable",
            "superFunction": 1315,
            "visibility": "internal"
          }
        ],
        "scope": 782,
        "src": "489:2033:4"
      }
    ],
    "src": "169:2354:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-07-31T01:32:10.022Z"
}